# Generated by Django 5.2.1 on 2025-05-13 15:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Auditoria',
            fields=[
                ('log_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tabla_afectada', models.CharField(max_length=64)),
                ('operacion', models.CharField(choices=[('INSERT', 'Inserción'), ('UPDATE', 'Actualización'), ('DELETE', 'Eliminación')], max_length=10)),
                ('registro_id', models.CharField(max_length=255)),
                ('datos_antiguos', models.JSONField(blank=True, null=True)),
                ('datos_nuevos', models.JSONField(blank=True, null=True)),
                ('usuario_db', models.CharField(max_length=100)),
                ('usuario_app', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_hora', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_origen', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'verbose_name': 'Registro de Auditoría',
                'verbose_name_plural': 'Registros de Auditoría',
                'db_table': 'auditoria',
                'indexes': [models.Index(fields=['fecha_hora'], name='idx_auditoria_fecha'), models.Index(fields=['tabla_afectada'], name='idx_auditoria_tabla')],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('cliente_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('preferencias', models.TextField(blank=True, help_text='Ej: tipo de corte preferido, productos usados', null=True)),
                ('historial_notas', models.TextField(blank=True, null=True)),
                ('ultima_visita', models.DateTimeField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'clientes',
                'indexes': [models.Index(fields=['nombre', 'apellido'], name='idx_cliente_nombre_apellido')],
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('empleado_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('puesto', models.CharField(help_text='Ej: Barbero Principal, Barbero, Recepcionista', max_length=50)),
                ('especialidad', models.CharField(blank=True, help_text='Ej: Cortes clásicos, Degradados, Afeitado con navaja', max_length=100, null=True)),
                ('fecha_contratacion', models.DateField()),
                ('porcentaje_comision', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('vacaciones', 'Vacaciones')], default='activo', max_length=20)),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'db_table': 'empleados',
                'indexes': [models.Index(fields=['nombre', 'apellido'], name='idx_empleado_nombre_apellido'), models.Index(fields=['especialidad'], name='idx_empleado_especialidad')],
            },
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('cita_id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_hora', models.DateTimeField()),
                ('duracion_total', models.IntegerField(help_text='Duración total calculada de los servicios en la cita')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('no_asistio', 'No Asistió')], default='pendiente', max_length=20)),
                ('notas', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('cliente', models.ForeignKey(blank=True, db_column='cliente_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='barberia_app.cliente')),
                ('empleado', models.ForeignKey(db_column='empleado_id', on_delete=django.db.models.deletion.RESTRICT, to='barberia_app.empleado')),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'db_table': 'citas',
            },
        ),
        migrations.CreateModel(
            name='HorarioEmpleado',
            fields=[
                ('horario_id', models.AutoField(primary_key=True, serialize=False)),
                ('dia_semana', models.IntegerField(choices=[(1, 'Lunes'), (2, 'Martes'), (3, 'Miércoles'), (4, 'Jueves'), (5, 'Viernes'), (6, 'Sábado'), (7, 'Domingo')], help_text='1=Lunes, ..., 7=Domingo')),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('es_descanso', models.BooleanField(default=False)),
                ('empleado', models.ForeignKey(db_column='empleado_id', on_delete=django.db.models.deletion.CASCADE, to='barberia_app.empleado')),
            ],
            options={
                'verbose_name': 'Horario de Empleado',
                'verbose_name_plural': 'Horarios de Empleados',
                'db_table': 'horarios_empleados',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('producto_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('marca', models.CharField(blank=True, max_length=50, null=True)),
                ('categoria', models.CharField(help_text='Ej: Ceras, Aceites para barba, Aftershaves, Champús para hombre', max_length=50)),
                ('precio_venta', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('precio_costo', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('stock_actual', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('stock_minimo', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('unidad_medida', models.CharField(default='unidad', max_length=20)),
                ('para_venta', models.BooleanField(default=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'productos',
                'indexes': [models.Index(fields=['categoria'], name='idx_producto_categoria'), models.Index(fields=['marca'], name='idx_producto_marca'), models.Index(fields=['activo'], name='idx_producto_activo')],
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('servicio_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('duracion_minutos', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('categoria', models.CharField(help_text='Ej: Cortes, Barba, Afeitado, Tratamientos', max_length=50)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
                'db_table': 'servicios',
                'indexes': [models.Index(fields=['categoria'], name='idx_servicio_categoria'), models.Index(fields=['activo'], name='idx_servicio_activo')],
            },
        ),
        migrations.CreateModel(
            name='DetalleCita',
            fields=[
                ('detalle_cita_id', models.AutoField(primary_key=True, serialize=False)),
                ('precio_aplicado', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duracion_minutos', models.IntegerField()),
                ('notas', models.TextField(blank=True, null=True)),
                ('cita', models.ForeignKey(db_column='cita_id', on_delete=django.db.models.deletion.CASCADE, to='barberia_app.cita')),
                ('servicio', models.ForeignKey(db_column='servicio_id', on_delete=django.db.models.deletion.RESTRICT, to='barberia_app.servicio')),
            ],
            options={
                'verbose_name': 'Detalle de Cita',
                'verbose_name_plural': 'Detalles de Citas',
                'db_table': 'detalle_citas',
            },
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('venta_id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_hora', models.DateTimeField(default=django.utils.timezone.now)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('impuestos', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('descuentos', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('tarjeta_credito', 'Tarjeta de Crédito'), ('tarjeta_debito', 'Tarjeta de Débito'), ('transferencia', 'Transferencia'), ('otro', 'Otro')], max_length=20)),
                ('estado', models.CharField(choices=[('completada', 'Completada'), ('anulada', 'Anulada'), ('reembolsada', 'Reembolsada')], default='completada', max_length=20)),
                ('notas', models.TextField(blank=True, null=True)),
                ('cita', models.OneToOneField(blank=True, db_column='cita_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='barberia_app.cita')),
                ('cliente', models.ForeignKey(blank=True, db_column='cliente_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='barberia_app.cliente')),
                ('empleado', models.ForeignKey(db_column='empleado_id', on_delete=django.db.models.deletion.RESTRICT, to='barberia_app.empleado')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'db_table': 'ventas',
            },
        ),
        migrations.CreateModel(
            name='MovimientoInventario',
            fields=[
                ('movimiento_id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_movimiento', models.CharField(choices=[('entrada', 'Entrada'), ('salida_venta', 'Salida por Venta'), ('salida_uso_interno', 'Salida por Uso Interno'), ('ajuste_positivo', 'Ajuste Positivo'), ('ajuste_negativo', 'Ajuste Negativo')], max_length=30)),
                ('cantidad', models.IntegerField()),
                ('fecha_hora', models.DateTimeField(default=django.utils.timezone.now)),
                ('motivo', models.CharField(blank=True, max_length=255, null=True)),
                ('documento_referencia', models.CharField(blank=True, max_length=50, null=True)),
                ('empleado', models.ForeignKey(blank=True, db_column='empleado_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='barberia_app.empleado')),
                ('producto', models.ForeignKey(db_column='producto_id', on_delete=django.db.models.deletion.RESTRICT, to='barberia_app.producto')),
                ('venta', models.ForeignKey(blank=True, db_column='venta_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='barberia_app.venta')),
            ],
            options={
                'verbose_name': 'Movimiento de Inventario',
                'verbose_name_plural': 'Movimientos de Inventario',
                'db_table': 'movimientos_inventario',
            },
        ),
        migrations.CreateModel(
            name='DetalleVenta',
            fields=[
                ('detalle_venta_id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('producto', 'Producto'), ('servicio', 'Servicio')], max_length=10)),
                ('cantidad', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descuento_aplicado', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('subtotal_linea', models.DecimalField(decimal_places=2, max_digits=10)),
                ('producto', models.ForeignKey(blank=True, db_column='producto_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='barberia_app.producto')),
                ('servicio', models.ForeignKey(blank=True, db_column='servicio_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='barberia_app.servicio')),
                ('venta', models.ForeignKey(db_column='venta_id', on_delete=django.db.models.deletion.CASCADE, to='barberia_app.venta')),
            ],
            options={
                'verbose_name': 'Detalle de Venta',
                'verbose_name_plural': 'Detalles de Ventas',
                'db_table': 'detalle_ventas',
            },
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['fecha_hora'], name='idx_cita_fecha_hora'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['empleado', 'fecha_hora'], name='idx_cita_empleado_fecha'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['cliente'], name='idx_cita_cliente'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['estado'], name='idx_cita_estado'),
        ),
        migrations.AlterUniqueTogether(
            name='cita',
            unique_together={('empleado', 'fecha_hora')},
        ),
        migrations.AddIndex(
            model_name='horarioempleado',
            index=models.Index(fields=['empleado', 'dia_semana'], name='idx_horario_empleado_dia'),
        ),
        migrations.AddIndex(
            model_name='detallecita',
            index=models.Index(fields=['servicio'], name='idx_detalle_cita_servicio'),
        ),
        migrations.AlterUniqueTogether(
            name='detallecita',
            unique_together={('cita', 'servicio')},
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['fecha_hora'], name='idx_venta_fecha'),
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['cliente'], name='idx_venta_cliente'),
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['empleado'], name='idx_venta_empleado'),
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['estado'], name='idx_venta_estado'),
        ),
        migrations.AddIndex(
            model_name='movimientoinventario',
            index=models.Index(fields=['producto'], name='idx_movimiento_producto'),
        ),
        migrations.AddIndex(
            model_name='movimientoinventario',
            index=models.Index(fields=['fecha_hora'], name='idx_movimiento_fecha'),
        ),
        migrations.AddIndex(
            model_name='movimientoinventario',
            index=models.Index(fields=['tipo_movimiento'], name='idx_movimiento_tipo'),
        ),
        migrations.AddIndex(
            model_name='detalleventa',
            index=models.Index(fields=['producto'], name='idx_detalle_venta_producto'),
        ),
        migrations.AddIndex(
            model_name='detalleventa',
            index=models.Index(fields=['servicio'], name='idx_detalle_venta_servicio'),
        ),
    ]
